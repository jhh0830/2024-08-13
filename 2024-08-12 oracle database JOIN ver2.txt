2024-08-13

2. 포괄 조인 / 외부 조인 (OUTER JOIN)
    
    테이블 간의 JOIN 시 일치하지 않은 행도 포함시켜서 조회 가능
    단, 반드시 LEFT / RIGHT 를 지정해야함
    (기존이 되는 테이블을 지정해야 함)
-- 1) LEFT OUTER JOIN
-- 두 테이블 중 "왼편" 에 기술된 테이블을 기준으로 하여 JOIN
-- 즉, 뭐가 되었든 간에 왼편에 기술된 테이블의 데이터는 무조건 조회
-- (일치하는걸 찾지 못하더라도)

-- 2) RIGHT OUTER JOIN
-- 두 테이블 중 "오른편" 에 기술된 테이블을 기준으로 조인
-- 즉, 뭐가 되었든 간에 오른편에 기술된 테이블의 데이터는 무조건 조회
-- (일치하는것을 찾지 못하더라도)

-- 포괄 조인 / 외부 조인
-- : 왼쪽 기준일 경우 일치하는것 + 왼쪽에서 누락된 데이터
-- : 오른쪽 기준일 경우 일치하는것 + 오른쪽에서 누락된 데이터
-- : FULL 일 경우 (ANSI 만 가능) 일치하는것 + 왼쪽에서 누락 + 오른쪽에서 누락된 데이터

 3. 카테시안 곱 / 교차 조인
    
    모든 테이블의 각 행들이 서로서로 맵핑된 데이터가 조회됨(곱집합)
    두 테이블의 모든 행들이 모두 곱해진 행들의 조합이 다 출력됨
    => 방대한 데이터 출력 => 과부하 위험
    
    주로, 내가 JOIN 구문 작성 시 실수할 경우 발생하지,
    대놓고 실무에서 사용될 일은 극히 드물다.
    
  4. 비등가 조인 (NON EQUAL JOIN)
    
    연결고리에 대한 조건식에 '=' (등호) 를 사용하지 않는 조인문
    주로, 지정한 컬럼값이 일치하는 경우가 아닌,
    "범위" 에 포함되는 경우 매칭
--> EMPLOYEE 테이블의 SAL_LEVEL 컬럼 (파생컬럼) 은 없어도 무방!!
--  (사실 없는게 더 권장사항임)
-- 왜? SALARY 급여는 유동적인 값인데, SALARY 값이 변할 때마다
-- 그에 맞는 SAL_LEVEL 컬럼값도 함께 변경해줘야함!!
-- 변경도 귀찮을 뿐만 아니라, 변경하는 과정에서 실수할 경우
-- 데이터의 불일치 현상이 발생할 수 있기 때문!!

-- 파생컬럼 예시) EMPLOYEE 테이블의 연봉 컬럼 
--> 마찬가지로 SALARY 가 변경 될때마다 연봉 컬럼값도 같이 계산해서 바꿔야함!!

--> ANSI 구문 형식으로 비등가 조인을 하고싶다면
-- 무조건 ON 구문만 사용 가느함!!
-- 왜? 내가 직접 복잡한 조건식을 기술할 수 밖에 없기 때문

-- 비등가 조인 예시)
-- 인터넷 쇼핑몰
-- 회원 정보 테이블 / 구매금액에 따른 구간별 회원등급 테이블

 5. 자체 조인 (SELF JOIN)
     
     같은 테이블을 다시 한번 조인하는 경우
     즉, 자기 자신의 테이블과 다시 조인을 맺는 경우
     AMBIGUOUSLY 오류 주의!!
--> 여러개의 테이블 또한 조인 가능하다.
-- ANSI 구문의 경우 JOIN 절 작성 순서가 중요!!



